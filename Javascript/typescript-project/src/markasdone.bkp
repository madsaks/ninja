import React, { Dispatch, SetStateAction, useState } from 'react';
import './App.css';



  interface ItemProps {
    // name?: string
    setItem: (item: IItem) => void
    item: IItem
    del: () => void

  }


  function ShoppingListItem({ item, del, setItem }: ItemProps) {
    const [checked, setChecked] = useState<boolean>(false)
   
    
    if (!item) {
      return null
    }
    return (
      <li >
        <span>
          
        {item.checked ? <s>{item.name}</s> : item.name }
       </span>
        {/* Item name */}
          
        {/* Delete button */}
        <span>

        <button
          onClick={() => { del() }}>Delete
        </button>
      
        
        {/* Need to add item.checked function */}
        <input type="checkbox" checked={item.checked} onChange={() => {
          setItem({
            ...item,
            checked: !item.checked
          })
        }}/>
        </span>

      </li>)}


  interface ListProps {
    items: IItem[]
    setItems: Dispatch<SetStateAction<IItem[]>>
  }



function ShoppingList(props: ListProps) {
    const {setItems, items} = props
    return (
      <ul className="shopping-list">
        {items.map(function (item: IItem) {
          return <ShoppingListItem
            // key={name}
            item={item}
            setItem={(newItem: IItem) => {
              const index = items.indexOf(item)
              let newItems = [...items]
              newItems[index] = newItem
              setItems(newItems)
            }}
            del={() => {
              const updatedArray = props.items.filter((val) => {
                return item !== val
              })
            props.setItems(updatedArray)
            }}        
          
          />
        })}
      </ul>
    )
  }

interface IItem {
  name: string,
  checked: boolean
}



function App() {
  //  Define our state holding variables
      
  const [newItem, setNewItem] = useState("")
  const [items, setItems] = useState<IItem[]>([
    
    { name: "bread", checked: false },
    { name: "Milk", checked: false },
    { name: "Cheese", checked: false }
    ])

    
  
    
    // Begin main app
    
    return (
      <div className="flexbox" id="app">
        <div className="shoppingList">
          <h1>Shopping List</h1>
          <div className="input-wrap">

          <input className="textInput" value={newItem} onChange={(e) =>  {
            setNewItem(e.currentTarget.value);
          }} />

          <button className="deleteButton" onClick={() => {
            setItems((prev) => [...prev, { name: newItem, checked: false }])
            setNewItem("")
          }}>add</button>
          </div>

          <ShoppingList items={items} setItems={setItems} />
        </div>
      </div>
    );
}



  export default App;





